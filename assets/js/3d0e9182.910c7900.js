/*! For license information please see 3d0e9182.910c7900.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[353667],{947153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(824246),o=n(511151);const i={id:"catalog-customization",title:"Catalog Customization",description:"How to add custom filters or interface elements to the Backstage software catalog"},r=void 0,s={id:"features/software-catalog/catalog-customization",title:"Catalog Customization",description:"How to add custom filters or interface elements to the Backstage software catalog",source:"@site/../docs/features/software-catalog/catalog-customization.md",sourceDirName:"features/software-catalog",slug:"/features/software-catalog/catalog-customization",permalink:"/docs/features/software-catalog/catalog-customization",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/features/software-catalog/catalog-customization.md",tags:[],version:"current",frontMatter:{id:"catalog-customization",title:"Catalog Customization",description:"How to add custom filters or interface elements to the Backstage software catalog"},sidebar:"docs",previous:{title:"External integrations",permalink:"/docs/features/software-catalog/external-integrations"},next:{title:"API",permalink:"/docs/features/software-catalog/software-catalog-api"}},l={},c=[{value:"Pagination",id:"pagination",level:2},{value:"Initially Selected Filter",id:"initially-selected-filter",level:2},{value:"Initially Selected Kind",id:"initially-selected-kind",level:2},{value:"Owner Picker Mode",id:"owner-picker-mode",level:2},{value:"Table Options",id:"table-options",level:2},{value:"Customize Columns",id:"customize-columns",level:2},{value:"Customize Actions",id:"customize-actions",level:2},{value:"Customize Filters",id:"customize-filters",level:2},{value:"Default Filter Props",id:"default-filter-props",level:3},{value:"Removing Default Filters",id:"removing-default-filters",level:3},{value:"Custom Filters",id:"custom-filters",level:3},{value:"Advanced Customization",id:"advanced-customization",level:2}];function u(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The Backstage software catalog comes with a default ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," to filter and find catalog entities. This is already set up by default by ",(0,a.jsx)(t.code,{children:"@backstage/create-app"}),". If you want to change the default index page - to set the initially selected filter, adjust columns, add actions, or to add a custom filter to the catalog - the following sections will show you how."]}),"\n",(0,a.jsx)(t.h2,{id:"pagination",children:"Pagination"}),"\n",(0,a.jsxs)(t.p,{children:["Initial support for pagination of the ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," was added in v1.21.0 of Backstage, so make sure you are on that version or newer to use this feature. To enable pagination you simply need to pass in the ",(0,a.jsx)(t.code,{children:"pagination"})," prop like this:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'<Route path="/catalog" element={<CatalogIndexPage pagination />} />\n'})}),"\n",(0,a.jsx)(t.h2,{id:"initially-selected-filter",children:"Initially Selected Filter"}),"\n",(0,a.jsx)(t.p,{children:"By default the initially selected filter defaults to Owned. If you are still building up your catalog this may show an empty list to start. If you would prefer this to show All as the default, here's how you can make that change:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'<Route\n  path="/catalog"\n  element={<CatalogIndexPage initiallySelectedFilter="all" />}\n/>\n'})}),"\n",(0,a.jsx)(t.p,{children:"Possible options are: owned, starred, or all"}),"\n",(0,a.jsx)(t.h2,{id:"initially-selected-kind",children:"Initially Selected Kind"}),"\n",(0,a.jsx)(t.p,{children:"By default the initially selected Kind when viewing the Catalog is Component, but you may have reasons that you want this to be different. Let's say at your Organization they would like it to always default to Domain, here's how you would do that:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'<Route path="/catalog" element={<CatalogIndexPage initialKind="domain" />} />\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Possible options are all the ",(0,a.jsx)(t.a,{href:"/docs/features/software-catalog/system-model",children:"default Kinds"})," as well as any custom Kinds that you have added."]}),"\n",(0,a.jsx)(t.h2,{id:"owner-picker-mode",children:"Owner Picker Mode"}),"\n",(0,a.jsx)(t.p,{children:"The Owner filter by default will only contain a list of Users and/or Groups that actually own an entity in the Catalog, now you may have reason to change this. Here's how:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'<Route path="/catalog" element={<CatalogIndexPage ownerPickerMode="all" />} />\n'})}),"\n",(0,a.jsx)(t.p,{children:"Possible options are: owners-only or all"}),"\n",(0,a.jsx)(t.h2,{id:"table-options",children:"Table Options"}),"\n",(0,a.jsxs)(t.p,{children:["The tables used within Backstage are built on top of ",(0,a.jsx)(t.a,{href:"https://material-table-core.github.io/",children:(0,a.jsx)(t.code,{children:"@material-table/core"})})," and the ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," has a ",(0,a.jsx)(t.code,{children:"tableOptions"})," prop that allows you to customize the underlying table to a certain extent, but there are some hard coded Backstage settings that can't be changed. Here's an example of how to use this prop to disable the search filter field in the table's header:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'<Route\n  path="/catalog"\n  element={<CatalogIndexPage tableOptions={{ search: false }} />}\n/>\n'})}),"\n",(0,a.jsxs)(t.p,{children:["There are many options that can be set using ",(0,a.jsx)(t.code,{children:"tableOptions"}),", the full list of settings can be found in the ",(0,a.jsxs)(t.a,{href:"https://github.com/material-table-core/core/blob/v3.1.0/types/index.d.ts#L323",children:[(0,a.jsx)(t.code,{children:"@material-table/core"})," ",(0,a.jsx)(t.code,{children:"Options"})," interface"]})," (this link goes to ",(0,a.jsx)(t.code,{children:"v3.1.0"})," of ",(0,a.jsx)(t.code,{children:"@material-table/core"})," as that is the version currently used by Backstage)."]}),"\n",(0,a.jsx)(t.h2,{id:"customize-columns",children:"Customize Columns"}),"\n",(0,a.jsxs)(t.p,{children:["By default the columns you see in the ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," were selected to be a good starting point for most but there may be reasons that you would like to customize these with more or less columns. One primary use case for this customization is if you added a custom Kind. Support for this was added in v1.23.0 of Backstage, make sure you are on that version or newer to use this feature. Here's an example of how to make this customization:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:"import {\n  CatalogEntityPage,\n  CatalogIndexPage,\n  catalogPlugin,\n  {/* highlight-add-start */}\n  CatalogTable,\n  CatalogTableColumnsFunc,\n  {/* highlight-add-end */}\n} from '@backstage/plugin-catalog';\n\n{/* highlight-add-start */}\nconst myColumnsFunc: CatalogTableColumnsFunc = entityListContext => {\n  if (entityListContext.filters.kind?.value === 'MyKind') {\n    return [\n      CatalogTable.columns.createNameColumn(),\n      CatalogTable.columns.createOwnerColumn(),\n    ];\n  }\n\n  return CatalogTable.defaultColumnsFunc(entityListContext);\n};\n{/* highlight-add-end */}\n\n{/* highlight-remove-next-line */}\n<Route path=\"/catalog\" element={<CatalogIndexPage />} />\n{/* highlight-add-next-line */}\n<Route path=\"/catalog\" element={<CatalogIndexPage columns={myColumnsFunc} />} />\n"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Note: the above example has been simplified and you will most likely have more code then just this in your ",(0,a.jsx)(t.code,{children:"App.tsx"})," file."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"customize-actions",children:"Customize Actions"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," comes with three default actions - view, edit, and star. You might want to add more."]}),"\n",(0,a.jsxs)(t.p,{children:["To do this, first you'll need to add ",(0,a.jsx)(t.code,{children:"@mui/utils"})," to your ",(0,a.jsx)(t.code,{children:"packages/app/package.json"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"yarn --cwd packages/app add @mui/utils\n"})}),"\n",(0,a.jsx)(t.p,{children:"Then you'll do the following:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:"import {\n  AlertDisplay,\n  OAuthRequestDialog,\n  SignInPage,\n  {/* highlight-add-next-line */}\n  TableProps,\n} from '@backstage/core-components';\n\nimport {\n  CatalogEntityPage,\n  CatalogIndexPage,\n  {/* highlight-add-next-line */}\n  CatalogTableRow,\n  catalogPlugin,\n} from '@backstage/plugin-catalog';\n\n{/* highlight-add-start */}\nimport { Typography } from '@material-ui/core';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { visuallyHidden } from '@mui/utils';\n{/* highlight-add-end */}\n\n{/* highlight-add-start */}\nconst customActions: TableProps<CatalogTableRow>['actions'] = [\n  ({ entity }) => {\n    const url = 'https://backstage.io/';\n    const title = `View - ${entity.metadata.name}`;\n\n    return {\n      icon: () => (\n        <>\n          <Typography style={visuallyHidden}>{title}</Typography>\n          <OpenInNew fontSize=\"small\" />\n        </>\n      ),\n      tooltip: title,\n      disabled: !url,\n      onClick: () => {\n        if (!url) return;\n        window.open(url, '_blank');\n      },\n    };\n  },\n];\n{/* highlight-add-end */}\n\n{/* highlight-remove-next-line */}\n<Route path=\"/catalog\" element={<CatalogIndexPage />} />\n{/* highlight-add-next-line */}\n<Route path=\"/catalog\" element={<CatalogIndexPage actions={customActions} />} />\n"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Note: the above example has been simplified and you will most likely have more code then just this in your ",(0,a.jsx)(t.code,{children:"App.tsx"})," file."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The above customization will override the existing actions. Currently the only way to keep them and add your own is to also include the existing actions in your array by copying them from the ",(0,a.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/57397e7d6d2d725712c439f4ab93f2ac6aa27bf8/plugins/catalog/src/components/CatalogTable/CatalogTable.tsx#L113-L168",children:(0,a.jsx)(t.code,{children:"defaultActions"})}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"customize-filters",children:"Customize Filters"}),"\n",(0,a.jsx)(t.p,{children:"There are three options you have for filters: adjusting the existing filters with props, adding or removing the default filters, or creating a brand new custom filter. The following sections cover these cases"}),"\n",(0,a.jsx)(t.h3,{id:"default-filter-props",children:"Default Filter Props"}),"\n",(0,a.jsx)(t.p,{children:"There are a set of default filters that you can use, which surface all the props mentioned earlier in this document. Here's how they can be used:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'import { DefaultFilters } from \'@backstage/plugin-catalog-react\';\n\n<Route\n  path="/catalog"\n  element={\n    <CatalogIndexPage\n      filters={\n        <>\n          <DefaultFilters\n            initialKind="Domain"\n            initiallySelectedFilter="all"\n            ownerPickerMode="all"\n          />\n        </>\n      }\n    />\n  }\n/>;\n'})}),"\n",(0,a.jsx)(t.h3,{id:"removing-default-filters",children:"Removing Default Filters"}),"\n",(0,a.jsx)(t.p,{children:"You may have reasons not use the Lifecycle, Tag, and Processing Status filters, here's an example of how you would remove them:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:"import {\n  EntityKindPicker,\n  EntityTypePicker,\n  UserListPicker,\n  EntityOwnerPicker,\n  EntityNamespacePicker,\n} from '@backstage/plugin-catalog-react';\n\n<Route\n  path=\"/catalog\"\n  element={\n    <CatalogIndexPage\n      filters={\n        <>\n          <EntityKindPicker />\n          <EntityTypePicker />\n          <UserListPicker />\n          <EntityOwnerPicker />\n          <EntityNamespacePicker />\n        </>\n      }\n    />\n  }\n/>;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"custom-filters",children:"Custom Filters"}),"\n",(0,a.jsxs)(t.p,{children:["You can add custom filters. For example, suppose that I want to allow filtering by a custom annotation added to entities, ",(0,a.jsx)(t.code,{children:"company.com/security-tier"}),". Here is how we can build a filter to support that need."]}),"\n",(0,a.jsxs)(t.p,{children:["First we need to create a new filter that implements the ",(0,a.jsx)(t.code,{children:"EntityFilter"})," interface:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"import { EntityFilter } from '@backstage/plugin-catalog-react';\nimport { Entity } from '@backstage/catalog-model';\n\nclass EntitySecurityTierFilter implements EntityFilter {\n  constructor(readonly values: string[]) {}\n  filterEntity(entity: Entity): boolean {\n    const tier = entity.metadata.annotations?.['company.com/security-tier'];\n    return tier !== undefined && this.values.includes(tier);\n  }\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"EntityFilter"})," interface permits backend filters, which are passed along to the ",(0,a.jsx)(t.code,{children:"catalog-backend"})," - or frontend filters, which are applied after entities are loaded from the backend."]}),"\n",(0,a.jsx)(t.p,{children:"We'll use this filter to extend the default filters in a type-safe way. Let's create the custom filter shape extending the default somewhere alongside this filter:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"export type CustomFilters = DefaultEntityFilters & {\n  securityTiers?: EntitySecurityTierFilter;\n};\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To control this filter, we can create a React component that shows checkboxes for the security tiers. This component will make use of the ",(0,a.jsx)(t.code,{children:"useEntityList"})," hook, which accepts this extended filter type as a ",(0,a.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/generics.html",children:"generic"})," parameter:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"export const EntitySecurityTierPicker = () => {\n  // The securityTiers key is recognized due to the CustomFilter generic\n  const {\n    filters: { securityTiers },\n    updateFilters,\n  } = useEntityList<CustomFilters>();\n\n  // Toggles the value, depending on whether it's already selected\n  function onChange(value: string) {\n    const newTiers = securityTiers?.values.includes(value)\n      ? securityTiers.values.filter(tier => tier !== value)\n      : [...(securityTiers?.values ?? []), value];\n    updateFilters({\n      securityTiers: newTiers.length\n        ? new EntitySecurityTierFilter(newTiers)\n        : undefined,\n    });\n  }\n\n  const tierOptions = ['1', '2', '3'];\n  return (\n    <FormControl component=\"fieldset\">\n      <Typography variant=\"button\">Security Tier</Typography>\n      <FormGroup>\n        {tierOptions.map(tier => (\n          <FormControlLabel\n            key={tier}\n            control={\n              <Checkbox\n                checked={securityTiers?.values.includes(tier)}\n                onChange={() => onChange(tier)}\n              />\n            }\n            label={`Tier ${tier}`}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n  );\n};\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Now we can add the component to ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'{\n  /* highlight-add-start */\n}\nimport { DefaultFilters } from \'@backstage/plugin-catalog-react\';\n{\n  /* highlight-add-end */\n}\n\nconst routes = (\n  <FlatRoutes>\n    <Navigate key="/" to="catalog" />\n    {/* highlight-remove-next-line */}\n    <Route path="/catalog" element={<CatalogIndexPage />} />\n    {/* highlight-add-start */}\n    <Route\n      path="/catalog"\n      element={\n        <CatalogIndexPage\n          filters={\n            <>\n              <DefaultFilters />\n              <EntitySecurityTierPicker />\n            </>\n          }\n        />\n      }\n    />\n    {/* highlight-add-end */}\n    {/* ... */}\n  </FlatRoutes>\n);\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The same method can be used to customize the ",(0,a.jsx)(t.em,{children:"default"})," filters with a different interface - for such usage, the generic argument isn't needed since the filter shape remains the same as the default."]}),"\n",(0,a.jsx)(t.h2,{id:"advanced-customization",children:"Advanced Customization"}),"\n",(0,a.jsxs)(t.p,{children:["For those where none of the above fits their needs you can take the option of creating a fully custom ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/components/catalog/CustomCatalogIndex.tsx"',children:"import {\n  PageWithHeader,\n  Content,\n  ContentHeader,\n  SupportButton,\n} from '@backstage/core-components';\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport { CatalogTable } from '@backstage/plugin-catalog';\nimport {\n  EntityListProvider,\n  CatalogFilterLayout,\n  EntityKindPicker,\n  EntityLifecyclePicker,\n  EntityNamespacePicker,\n  EntityOwnerPicker,\n  EntityProcessingStatusPicker,\n  EntityTagPicker,\n  EntityTypePicker,\n  UserListPicker,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\n\nexport const CustomCatalogPage = () => {\n  const orgName =\n    useApi(configApiRef).getOptionalString('organization.name') ?? 'Backstage';\n\n  return (\n    <PageWithHeader title={orgName} themeId=\"home\">\n      <Content>\n        <ContentHeader title=\"\">\n          <SupportButton>All your software catalog entities</SupportButton>\n        </ContentHeader>\n        <EntityListProvider pagination>\n          <CatalogFilterLayout>\n            <CatalogFilterLayout.Filters>\n              <EntityKindPicker />\n              <EntityTypePicker />\n              <UserListPicker />\n              <EntityOwnerPicker />\n              <EntityLifecyclePicker />\n              <EntityTagPicker />\n              <EntityProcessingStatusPicker />\n              <EntityNamespacePicker />\n            </CatalogFilterLayout.Filters>\n            <CatalogFilterLayout.Content>\n              <CatalogTable />\n            </CatalogFilterLayout.Content>\n          </CatalogFilterLayout>\n        </EntityListProvider>\n      </Content>\n    </PageWithHeader>\n  );\n};\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The above is a very basic version of a fully custom ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"}),", you'll want to explore the various props to see what you can all do with them. This was built off the building blocks seen in the ",(0,a.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/catalog/src/components/CatalogPage/DefaultCatalogPage.tsx",children:(0,a.jsx)(t.code,{children:"DefaultCatalogPage"})})]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Note: The catalog index page is designed to have a minimal code footprint to support easy customization, but creating a replica does introduce a possibility of drifting out of date over time. Be sure to check the catalog ",(0,a.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/catalog/CHANGELOG.md",children:"CHANGELOG"})," periodically."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["To use this custom ",(0,a.jsx)(t.code,{children:"CatalogIndexPage"})," which we called ",(0,a.jsx)(t.code,{children:"CustomCatalogPage"}),", you'll need to make the following change:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="packages/app/src/App.tsx"',children:'const routes = (\n  <FlatRoutes>\n    <Navigate key="/" to="catalog" />\n    {/* highlight-remove-next-line */}\n    <Route path="/catalog" element={<CatalogIndexPage />} />\n    {/* highlight-add-start */}\n    <Route path="/catalog" element={<CatalogIndexPage />}>\n      <CustomCatalogPage />\n    </Route>\n    {/* highlight-add-end */}\n    {/* ... */}\n  </FlatRoutes>\n);\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},371426:(e,t,n)=>{var a=n(827378),o=Symbol.for("react.element"),i=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,s=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var a,i={},c=null,u=null;for(a in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)r.call(t,a)&&!l.hasOwnProperty(a)&&(i[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===i[a]&&(i[a]=t[a]);return{$$typeof:o,type:e,key:c,ref:u,props:i,_owner:s.current}}t.Fragment=i,t.jsx=c,t.jsxs=c},541535:(e,t)=>{var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||g}function x(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||g}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=y.prototype;var k=b.prototype=new x;k.constructor=b,f(k,y.prototype),k.isPureReactComponent=!0;var w=Array.isArray,j=Object.prototype.hasOwnProperty,v={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,a){var o,i={},r=null,s=null;if(null!=t)for(o in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(r=""+t.key),t)j.call(t,o)&&!C.hasOwnProperty(o)&&(i[o]=t[o]);var l=arguments.length-2;if(1===l)i.children=a;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];i.children=c}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===i[o]&&(i[o]=l[o]);return{$$typeof:n,type:e,key:r,ref:s,props:i,_owner:v.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var E=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function F(e,t,o,i,r){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case a:l=!0}}if(l)return r=r(l=e),e=""===i?"."+_(l,0):i,w(r)?(o="",null!=e&&(o=e.replace(E,"$&/")+"/"),F(r,t,o,"",(function(e){return e}))):null!=r&&(T(r)&&(r=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(r,o+(!r.key||l&&l.key===r.key?"":(""+r.key).replace(E,"$&/")+"/")+e)),t.push(r)),1;if(l=0,i=""===i?".":i+":",w(e))for(var c=0;c<e.length;c++){var u=i+_(s=e[c],c);l+=F(s,t,o,u,r)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=F(s=s.value,t,o,u=i+_(s,c++),r);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function S(e,t,n){if(null==e)return e;var a=[],o=0;return F(e,a,"","",(function(e){return t.call(n,e,o++)})),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},O={transition:null},N={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:O,ReactCurrentOwner:v};t.Children={map:S,forEach:function(e,t,n){S(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return S(e,(function(){t++})),t},toArray:function(e){return S(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=o,t.Profiler=r,t.PureComponent=b,t.StrictMode=i,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.cloneElement=function(e,t,a){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=f({},e.props),i=e.key,r=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(r=t.ref,s=v.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)j.call(t,c)&&!C.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=a;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}return{$$typeof:n,type:e.type,key:i,ref:r,props:o,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return I.current.useCallback(e,t)},t.useContext=function(e){return I.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return I.current.useDeferredValue(e)},t.useEffect=function(e,t){return I.current.useEffect(e,t)},t.useId=function(){return I.current.useId()},t.useImperativeHandle=function(e,t,n){return I.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return I.current.useMemo(e,t)},t.useReducer=function(e,t,n){return I.current.useReducer(e,t,n)},t.useRef=function(e){return I.current.useRef(e)},t.useState=function(e){return I.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return I.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return I.current.useTransition()},t.version="18.2.0"},827378:(e,t,n)=>{e.exports=n(541535)},824246:(e,t,n)=>{e.exports=n(371426)},511151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var a=n(667294);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);