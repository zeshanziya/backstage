/*! For license information please see d58a02e9.f2e3dc36.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[910784],{620421:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>h});var o=a(785893),r=a(511151);const n={title:"Five common traits of successful Backstage adopters",author:"Taras Mankovski, CXO, Frontside"},i=void 0,s={permalink:"/blog/2023/07/28/frontside-adopter-post",source:"@site/blog/2023-07-28-frontside-adopter-post.mdx",title:"Five common traits of successful Backstage adopters",description:"backstage header",date:"2023-07-28T00:00:00.000Z",formattedDate:"July 28, 2023",tags:[],readingTime:4.405,hasTruncateMarker:!0,authors:[{name:"Taras Mankovski, CXO, Frontside"}],frontMatter:{title:"Five common traits of successful Backstage adopters",author:"Taras Mankovski, CXO, Frontside"},unlisted:!1,prevItem:{title:"Expedia Group shares Backstage proof of value metrics 2.0",permalink:"/blog/2023/08/17/expedia-proof-of-value-metrics-2"},nextItem:{title:"Adopter Spotlight: How Stash simplified monitoring, ownership and true app health with microservices",permalink:"/blog/2023/07/08/stash-adopter-post"}},c={authorsImageUrls:[void 0]},h=[{value:"<strong>1) They take a product-centric approach</strong>",id:"1-they-take-a-product-centric-approach",level:2},{value:"<strong>2) They tie Backstage to a larger platform journey</strong>",id:"2-they-tie-backstage-to-a-larger-platform-journey",level:2},{value:"<strong>3) They prioritize developer experience</strong>",id:"3-they-prioritize-developer-experience",level:2},{value:"<strong>4) They collaborate with other platform teams</strong>",id:"4-they-collaborate-with-other-platform-teams",level:2},{value:"<strong>5) They engage, learn, and grow with the community</strong>",id:"5-they-engage-learn-and-grow-with-the-community",level:2}];function l(e){const t=Object.assign({p:"p",img:"img",a:"a",h2:"h2",strong:"strong"},(0,r.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"backstage header",src:a(800154).Z+"",width:"1200",height:"630"})}),"\n",(0,o.jsxs)(t.p,{children:["At ",(0,o.jsx)(t.a,{href:"https://frontside.com/",children:"Frontside"}),", our goal is to help cloud-native teams create cohesive development experiences. We've been at the Backstage party since the beginning helping companies adopt and extend Backstage to fit the needs of their unique ecosystems."]}),"\n",(0,o.jsx)(t.p,{children:"Through our experience, we've uncovered five common traits of organizations that have improved developer experience through successful Backstage implementation and adoption. In this blog, we'll dive into these traits with some thoughts on how you can follow their blueprint."}),"\n",(0,o.jsx)(t.p,{children:"{/* truncate */}"}),"\n",(0,o.jsx)(t.h2,{id:"1-they-take-a-product-centric-approach",children:(0,o.jsx)(t.strong,{children:"1) They take a product-centric approach"})}),"\n",(0,o.jsx)(t.p,{children:"The biggest factor for successful adopters of Backstage is their approach. There is a high correlation of success within organizations that approach building a developer portal like they're building a product. Some organizations will jump straight into solutioning instead of taking their time to identify what the problems are, how they affect users, and how those issues can be addressed."}),"\n",(0,o.jsx)(t.p,{children:"The team building out Backstage should assess or work from existing insights on the core challenges that developers are facing in their organization \u2014 both qualitative and quantitative data counts here \u2014 and connect those issues to a product roadmap with initial use cases and adoption milestones marked. By doing their research in advance, successful orgs have a clear vision of what they want to accomplish with their Backstage instance. They know exactly what goals need to be met and have pressure-tested potential issues and barriers."}),"\n",(0,o.jsx)(t.p,{children:"If you've already started your Backstage adoption journey but haven't mapped a Product Requirements Document (or PRD), don't panic! There is always time to do the foundational knowledge-building necessary to deploy something successful."}),"\n",(0,o.jsx)(t.h2,{id:"2-they-tie-backstage-to-a-larger-platform-journey",children:(0,o.jsx)(t.strong,{children:"2) They tie Backstage to a larger platform journey"})}),"\n",(0,o.jsx)(t.p,{children:"Platform engineering has emerged in response to the growing complexity of cloud-native software architecture. Backstage has a huge role to play in implementing a platform strategy but its part of a larger story. Having buy-in from both higher ups and the teams tasked with platform goals is an essential step in successful Backstage adoption. Without the support at the top, it can be difficult to implement platforming as a priority within your organization."}),"\n",(0,o.jsx)(t.p,{children:"And by \"the top\", we don't necessarily mean your CTO needs to rubber stamp your Backstage POC. But it's important that higher-level Platform goals have been set among VPs and directors with the understanding that a well-constructed developer portal can be the catalyst to achieving not only better developer experience but broader cultural shifts."}),"\n",(0,o.jsx)(t.p,{children:"Having this kind of executive buy-in means more than just getting stakeholders on board with a portal build or clearing pathways towards Backstage adoption; it also means ensuring they understand the realities of your organization's journey."}),"\n",(0,o.jsx)(t.h2,{id:"3-they-prioritize-developer-experience",children:(0,o.jsx)(t.strong,{children:"3) They prioritize developer experience"})}),"\n",(0,o.jsx)(t.p,{children:"Having a dedicated developer experience or DevOps team tasked not only with building out a Backstage instance \u2014 but with leading adoption \u2014 is another big factor to success."}),"\n",(0,o.jsx)(t.p,{children:"Competing platforms are very common at big companies, with many teams doing different things or serving different parts of a business. But developer experience teams usually have a very clear mandate and are often one of the only commonalities between these competing teams. This team should have the bandwidth available to oversee the adoption process from start to finish, and partner with the right folks (research, design, internal comms and marketing) to create an effective adoption plan tailored specifically for a company's needs."}),"\n",(0,o.jsx)(t.p,{children:'If you don\'t have \u200cestablished developer experience resources in place, then the questions the team leading the Backstage work needs to ask are "what are the common problems to be solved at a platform level?" and "once we\'ve proved our initial use cases, how are we internally evangelizing this amongst our competing teams?"'}),"\n",(0,o.jsx)(t.h2,{id:"4-they-collaborate-with-other-platform-teams",children:(0,o.jsx)(t.strong,{children:"4) They collaborate with other platform teams"})}),"\n",(0,o.jsx)(t.p,{children:"A developer experience team can not single-handedly transform an organization's development structures, processes, and culture. It requires collaboration with teams responsible for other aspects of the platform. Successful adopters collaborate with other teams to bring them along on the journey of improving developer experience. They use Backstage as an opportunity to foster their inner-source contribution practice by allowing multiple platform teams to contribute plugins to their portal."}),"\n",(0,o.jsx)(t.p,{children:"The developer experience team takes on the role of host in that collaborative process. They support other teams in integrating their features into the portal, provide guidance on best practices, and advocate for the needs of developers."}),"\n",(0,o.jsx)(t.h2,{id:"5-they-engage-learn-and-grow-with-the-community",children:(0,o.jsx)(t.strong,{children:"5) They engage, learn, and grow with the community"})}),"\n",(0,o.jsxs)(t.p,{children:["One of the key benefits of building a developer platform based off an open source framework is leveraging the contributions and best practices from the community. The Backstage community is the largest gathering of developer experience practitioners in the world. There are now ",(0,o.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/63aa3a65ec05f638ba76c06878d6635194620b34/ADOPTERS.md#L4",children:"thousands of adopters"})," with a wealth of experience and best practices to learn from \u2014 and they are excited to share!"]}),"\n",(0,o.jsx)(t.p,{children:"By participating in the community, developer experience leaders can learn from their peers at other companies about strategies that work and can keep up with the latest features of the ever-evolving Backstage platform. They're aware of what solutions exist within the open source framework and plugin marketplace as well as what they may need to build in-house."}),"\n",(0,o.jsx)(t.p,{children:"In short, successful Backstage adopters engage within the Backstage community and their peer group to find solutions that fit their common challenges as well as their unique needs."})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(l,e)})):l(e)}},675251:(e,t,a)=>{var o=a(667294),r=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function h(e,t,a){var o,n={},h=null,l=null;for(o in void 0!==a&&(h=""+a),void 0!==t.key&&(h=""+t.key),void 0!==t.ref&&(l=t.ref),t)i.call(t,o)&&!c.hasOwnProperty(o)&&(n[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===n[o]&&(n[o]=t[o]);return{$$typeof:r,type:e,key:h,ref:l,props:n,_owner:s.current}}t.Fragment=n,t.jsx=h,t.jsxs=h},785893:(e,t,a)=>{e.exports=a(675251)},800154:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/header-96abda0eb0018d6cef5a8c9244ae57af.png"},511151:(e,t,a)=>{a.d(t,{Zo:()=>s,ah:()=>n});var o=a(667294);const r=o.createContext({});function n(e){const t=o.useContext(r);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const i={};function s({components:e,children:t,disableParentContext:a}){let s;return s=a?"function"==typeof e?e({}):e||i:n(e),o.createElement(r.Provider,{value:s},t)}}}]);