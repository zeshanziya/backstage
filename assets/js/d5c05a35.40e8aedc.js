/*! For license information please see d5c05a35.40e8aedc.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[82948],{460571:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(824246),i=t(511151);const r={id:"descriptor-format",title:"Descriptor Format of Catalog Entities",sidebar_label:"YAML File Format",description:"Documentation on Descriptor Format of Catalog Entities which describes the default data shape and semantics of catalog entities"},a=void 0,o={id:"features/software-catalog/descriptor-format",title:"Descriptor Format of Catalog Entities",description:"Documentation on Descriptor Format of Catalog Entities which describes the default data shape and semantics of catalog entities",source:"@site/../docs/features/software-catalog/descriptor-format.md",sourceDirName:"features/software-catalog",slug:"/features/software-catalog/descriptor-format",permalink:"/docs/features/software-catalog/descriptor-format",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/features/software-catalog/descriptor-format.md",tags:[],version:"current",frontMatter:{id:"descriptor-format",title:"Descriptor Format of Catalog Entities",sidebar_label:"YAML File Format",description:"Documentation on Descriptor Format of Catalog Entities which describes the default data shape and semantics of catalog entities"},sidebar:"docs",previous:{title:"System Model",permalink:"/docs/features/software-catalog/system-model"},next:{title:"Entity References",permalink:"/docs/features/software-catalog/references"}},d={},l=[{value:"Contents",id:"contents",level:2},{value:"Overall Shape Of An Entity",id:"overall-shape-of-an-entity",level:2},{value:"Substitutions In The Descriptor Format",id:"substitutions-in-the-descriptor-format",level:2},{value:"Common to All Kinds: The Envelope",id:"common-to-all-kinds-the-envelope",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required",level:3},{value:"<code>metadata</code> [required]",id:"metadata-required",level:3},{value:"<code>spec</code> [varies]",id:"spec-varies",level:3},{value:"Common to All Kinds: The Metadata",id:"common-to-all-kinds-the-metadata",level:2},{value:"<code>name</code> [required]",id:"name-required",level:3},{value:"<code>namespace</code> [optional]",id:"namespace-optional",level:3},{value:"<code>uid</code> [output]",id:"uid-output",level:3},{value:"<code>title</code> [optional]",id:"title-optional",level:3},{value:"<code>description</code> [optional]",id:"description-optional",level:3},{value:"<code>labels</code> [optional]",id:"labels-optional",level:3},{value:"<code>annotations</code> [optional]",id:"annotations-optional",level:3},{value:"<code>tags</code> [optional]",id:"tags-optional",level:3},{value:"<code>links</code> [optional]",id:"links-optional",level:3},{value:"Common to All Kinds: Relations",id:"common-to-all-kinds-relations",level:2},{value:"Common to All Kinds: Status",id:"common-to-all-kinds-status",level:2},{value:"Kind: Component",id:"kind-component",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-1",level:3},{value:"<code>spec.type</code> [required]",id:"spectype-required",level:3},{value:"<code>spec.lifecycle</code> [required]",id:"speclifecycle-required",level:3},{value:"<code>spec.owner</code> [required]",id:"specowner-required",level:3},{value:"<code>spec.system</code> [optional]",id:"specsystem-optional",level:3},{value:"<code>spec.subcomponentOf</code> [optional]",id:"specsubcomponentof-optional",level:3},{value:"<code>spec.providesApis</code> [optional]",id:"specprovidesapis-optional",level:3},{value:"<code>spec.consumesApis</code> [optional]",id:"specconsumesapis-optional",level:3},{value:"<code>spec.dependsOn</code> [optional]",id:"specdependson-optional",level:3},{value:"Kind: Template",id:"kind-template",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-2",level:3},{value:"<code>metadata.tags</code> [optional]",id:"metadatatags-optional",level:3},{value:"<code>spec.type</code> [required]",id:"spectype-required-1",level:3},{value:"<code>spec.parameters</code> [required]",id:"specparameters-required",level:3},{value:"<code>spec.steps</code> [required]",id:"specsteps-required",level:3},{value:"<code>spec.owner</code> [optional]",id:"specowner-optional",level:3},{value:"Kind: API",id:"kind-api",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-3",level:3},{value:"<code>spec.type</code> [required]",id:"spectype-required-2",level:3},{value:"<code>spec.lifecycle</code> [required]",id:"speclifecycle-required-1",level:3},{value:"<code>spec.owner</code> [required]",id:"specowner-required-1",level:3},{value:"<code>spec.system</code> [optional]",id:"specsystem-optional-1",level:3},{value:"<code>spec.definition</code> [required]",id:"specdefinition-required",level:3},{value:"Kind: Group",id:"kind-group",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-4",level:3},{value:"<code>spec.type</code> [required]",id:"spectype-required-3",level:3},{value:"<code>spec.profile</code> [optional]",id:"specprofile-optional",level:3},{value:"<code>spec.parent</code> [optional]",id:"specparent-optional",level:3},{value:"<code>spec.children</code> [required]",id:"specchildren-required",level:3},{value:"<code>spec.members</code> [optional]",id:"specmembers-optional",level:3},{value:"Kind: User",id:"kind-user",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-5",level:3},{value:"<code>spec.profile</code> [optional]",id:"specprofile-optional-1",level:3},{value:"<code>spec.memberOf</code> [required]",id:"specmemberof-required",level:3},{value:"Kind: Resource",id:"kind-resource",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-6",level:3},{value:"<code>spec.owner</code> [required]",id:"specowner-required-2",level:3},{value:"<code>spec.type</code> [required]",id:"spectype-required-4",level:3},{value:"<code>spec.system</code> [optional]",id:"specsystem-optional-2",level:3},{value:"<code>spec.dependsOn</code> [optional]",id:"specdependson-optional-1",level:3},{value:"<code>spec.dependencyOf</code> [optional]",id:"specdependencyof-optional",level:3},{value:"Kind: System",id:"kind-system",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-7",level:3},{value:"<code>spec.owner</code> [required]",id:"specowner-required-3",level:3},{value:"<code>spec.domain</code> [optional]",id:"specdomain-optional",level:3},{value:"Kind: Domain",id:"kind-domain",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-8",level:3},{value:"<code>spec.owner</code> [required]",id:"specowner-required-4",level:3},{value:"Kind: Location",id:"kind-location",level:2},{value:"<code>apiVersion</code> and <code>kind</code> [required]",id:"apiversion-and-kind-required-9",level:3},{value:"<code>spec</code> [required]",id:"spec-required",level:3},{value:"<code>spec.type</code> [optional]",id:"spectype-optional",level:3},{value:"<code>spec.target</code> [optional]",id:"spectarget-optional",level:3},{value:"<code>spec.targets</code> [optional]",id:"spectargets-optional",level:3},{value:"<code>spec.presence</code> [optional]",id:"specpresence-optional",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This section describes the default data shape and semantics of catalog entities."}),"\n",(0,s.jsx)(n.p,{children:"This both applies to objects given to and returned from the software catalog\nAPI, as well as to the descriptor files that the software catalog can ingest\nnatively. In the API request/response cycle, a JSON representation is used,\nwhile the descriptor files are on YAML format to be more easily maintainable by\nhumans. However, the structure and semantics are the same in both cases."}),"\n",(0,s.jsxs)(n.p,{children:["Although it's possible to name catalog entity descriptor files however you wish,\nwe recommend that you name them ",(0,s.jsx)(n.code,{children:"catalog-info.yaml"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"contents",children:"Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#overall-shape-of-an-entity",children:"Overall Shape Of An Entity"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-envelope",children:"Common to All Kinds: The Envelope"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"Common to All Kinds: The Metadata"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#common-to-all-kinds-relations",children:"Common to All Kinds: Relations"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#common-to-all-kinds-status",children:"Common to All Kinds: Status"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-component",children:"Kind: Component"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-template",children:"Kind: Template"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-api",children:"Kind: API"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-group",children:"Kind: Group"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-user",children:"Kind: User"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-resource",children:"Kind: Resource"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-system",children:"Kind: System"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-domain",children:"Kind: Domain"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#kind-location",children:"Kind: Location"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"overall-shape-of-an-entity",children:"Overall Shape Of An Entity"}),"\n",(0,s.jsx)(n.p,{children:"The following is an example of a descriptor file for a Component entity:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  name: artist-web\n  description: The place to be, for great artists\n  labels:\n    example.com/custom: custom_label_value\n  annotations:\n    example.com/service-discovery: artistweb\n    circleci.com/project-slug: github/example-org/artist-website\n  tags:\n    - java\n  links:\n    - url: https://admin.example-org.com\n      title: Admin Dashboard\n      icon: dashboard\n      type: admin-dashboard\nspec:\n  type: website\n  lifecycle: production\n  owner: artist-relations-team\n  system: public-websites\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is the same entity as returned in JSON from the software catalog API:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "apiVersion": "backstage.io/v1alpha1",\n  "kind": "Component",\n  "metadata": {\n    "annotations": {\n      "backstage.io/managed-by-location": "file:/tmp/catalog-info.yaml",\n      "example.com/service-discovery": "artistweb",\n      "circleci.com/project-slug": "github/example-org/artist-website"\n    },\n    "description": "The place to be, for great artists",\n    "etag": "ZjU2MWRkZWUtMmMxZS00YTZiLWFmMWMtOTE1NGNiZDdlYzNk",\n    "labels": {\n      "example.com/custom": "custom_label_value"\n    },\n    "links": [\n      {\n        "url": "https://admin.example-org.com",\n        "title": "Admin Dashboard",\n        "icon": "dashboard",\n        "type": "admin-dashboard"\n      }\n    ],\n    "tags": ["java"],\n    "name": "artist-web",\n    "uid": "2152f463-549d-4d8d-a94d-ce2b7676c6e2"\n  },\n  "spec": {\n    "lifecycle": "production",\n    "owner": "artist-relations-team",\n    "type": "website",\n    "system": "public-websites"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The root fields ",(0,s.jsx)(n.code,{children:"apiVersion"}),", ",(0,s.jsx)(n.code,{children:"kind"}),", ",(0,s.jsx)(n.code,{children:"metadata"}),", and ",(0,s.jsx)(n.code,{children:"spec"})," are part of the\n",(0,s.jsx)(n.em,{children:"envelope"}),", defining the overall structure of all kinds of entity. Likewise,\nsome metadata fields like ",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"labels"}),", and ",(0,s.jsx)(n.code,{children:"annotations"})," are of special\nsignificance and have reserved purposes and distinct shapes."]}),"\n",(0,s.jsx)(n.p,{children:"See below for details about these fields."}),"\n",(0,s.jsx)(n.h2,{id:"substitutions-in-the-descriptor-format",children:"Substitutions In The Descriptor Format"}),"\n",(0,s.jsxs)(n.p,{children:["The descriptor format supports substitutions using ",(0,s.jsx)(n.code,{children:"$text"}),", ",(0,s.jsx)(n.code,{children:"$json"}),", and\n",(0,s.jsx)(n.code,{children:"$yaml"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Placeholders like ",(0,s.jsx)(n.code,{children:"$json: https://example.com/entity.json"})," are substituted by\nthe content of the referenced file. Files can be referenced from any configured\nintegration similar to locations by passing an absolute URL. It's also possible\nto reference relative files like ",(0,s.jsx)(n.code,{children:"./referenced.yaml"})," from the same location.\nRelative references are handled relative to the folder of the\n",(0,s.jsx)(n.code,{children:"catalog-info.yaml"})," that contains the placeholder. There are three different\ntypes of placeholders:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"$text"}),": Interprets the contents of the referenced file as plain text and\nembeds it as a string."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"$json"}),": Interprets the contents of the referenced file as JSON and embeds the\nparsed structure."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"$yaml"}),": Interprets the contents of the referenced file as YAML and embeds the\nparsed structure."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For example, this can be used to load the definition of an API entity from a web\nserver and embed it as a string in the field ",(0,s.jsx)(n.code,{children:"spec.definition"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: API\nmetadata:\n  name: petstore\n  description: The Petstore API\nspec:\n  type: openapi\n  lifecycle: production\n  owner: petstore@example.com\n  definition:\n    $text: https://petstore.swagger.io/v2/swagger.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that to be able to read from targets that are outside of the normal\nintegration points such as ",(0,s.jsx)(n.code,{children:"github.com"}),", you'll need to explicitly allow it by\nadding an entry in the ",(0,s.jsx)(n.code,{children:"backend.reading.allow"})," list. Paths can be specified to\nfurther restrict targets For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"backend:\n  baseUrl: ...\n  reading:\n    allow:\n      - host: example.com\n      - host: '*.examples.org'\n      - host: example.net\n        paths: ['/api/']\n"})}),"\n",(0,s.jsx)(n.h2,{id:"common-to-all-kinds-the-envelope",children:"Common to All Kinds: The Envelope"}),"\n",(0,s.jsx)(n.p,{children:"The root envelope object has the following structure."}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"kind"})," is the high level entity type being described.\n",(0,s.jsx)(n.a,{href:"/docs/architecture-decisions/adrs-adr005",children:"ADR005"})," describes\na number of core kinds that plugins can know of and understand, but an\norganization using Backstage is free to also add entities of other kinds to the\ncatalog."]}),"\n",(0,s.jsxs)(n.p,{children:["The perhaps most central kind of entity, that the catalog focuses on in the\ninitial phase, is ",(0,s.jsx)(n.code,{children:"Component"})," (",(0,s.jsx)(n.a,{href:"#kind-component",children:"see below"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"apiVersion"})," is the version of specification format for that particular\nentity that the specification is made against. The version is used for being\nable to evolve the format, and the tuple of ",(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," should be\nenough for a parser to know how to interpret the contents of the rest of the\ndata."]}),"\n",(0,s.jsxs)(n.p,{children:["Backstage specific entities have an ",(0,s.jsx)(n.code,{children:"apiVersion"})," that is prefixed with\n",(0,s.jsx)(n.code,{children:"backstage.io/"}),", to distinguish them from other types of object that share the\nsame type of structure. This may be relevant when co-hosting these\nspecifications with e.g. Kubernetes object manifests, or when an organization\nadds their own specific kinds of entity to the catalog."]}),"\n",(0,s.jsxs)(n.p,{children:["Early versions of the catalog will be using alpha/beta versions, e.g.\n",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"}),", to signal that the format may still change. After that,\nwe will be using ",(0,s.jsx)(n.code,{children:"backstage.io/v1"})," and up."]}),"\n",(0,s.jsxs)(n.h3,{id:"metadata-required",children:[(0,s.jsx)(n.code,{children:"metadata"})," [required]"]}),"\n",(0,s.jsx)(n.p,{children:"A structure that contains metadata about the entity, i.e. things that aren't\ndirectly part of the entity specification itself. See below for more details\nabout this structure."}),"\n",(0,s.jsxs)(n.h3,{id:"spec-varies",children:[(0,s.jsx)(n.code,{children:"spec"})," [varies]"]}),"\n",(0,s.jsx)(n.p,{children:"The actual specification data that describes the entity."}),"\n",(0,s.jsxs)(n.p,{children:["The precise structure of the ",(0,s.jsx)(n.code,{children:"spec"})," depends on the ",(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"}),"\ncombination, and some kinds may not even have a ",(0,s.jsx)(n.code,{children:"spec"})," at all. See further down\nin this document for the specification structure of specific kinds."]}),"\n",(0,s.jsx)(n.h2,{id:"common-to-all-kinds-the-metadata",children:"Common to All Kinds: The Metadata"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"metadata"})," root field has a number of reserved fields with specific meaning,\ndescribed below."]}),"\n",(0,s.jsxs)(n.p,{children:["In addition to these, you may add any number of other fields directly under\n",(0,s.jsx)(n.code,{children:"metadata"}),", but be aware that general plugins and tools may not be able to\nunderstand their semantics. See ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/extending-the-model",children:"Extending the model"}),"\nfor more information."]}),"\n",(0,s.jsxs)(n.h3,{id:"name-required",children:[(0,s.jsx)(n.code,{children:"name"})," [required]"]}),"\n",(0,s.jsx)(n.p,{children:"The name of the entity. This name is both meant for human eyes to recognize the\nentity, and for machines and other components to reference the entity (e.g. in\nURLs or from other entity specification files)."}),"\n",(0,s.jsx)(n.p,{children:"Names must be unique per kind, within a given namespace (if specified), at any\npoint in time. This uniqueness constraint is case insensitive. Names may be\nreused at a later time, after an entity is deleted from the registry."}),"\n",(0,s.jsx)(n.p,{children:"Names are required to follow a certain format. Entities that do not follow those\nrules will not be accepted for registration in the catalog. The ruleset is\nconfigurable to fit your organization's needs, but the default behavior is as\nfollows."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Strings of length at least 1, and at most 63"}),"\n",(0,s.jsxs)(n.li,{children:["Must consist of sequences of ",(0,s.jsx)(n.code,{children:"[a-z0-9A-Z]"})," possibly separated by one of\n",(0,s.jsx)(n.code,{children:"[-_.]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"visits-tracking-service"}),", ",(0,s.jsx)(n.code,{children:"CircleciBuildsDumpV2_avro_gcs"})]}),"\n",(0,s.jsxs)(n.h3,{id:"namespace-optional",children:[(0,s.jsx)(n.code,{children:"namespace"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"The ID of a namespace that the entity belongs to. This field is optional, and\ncurrently has no special semantics apart from bounding the name uniqueness\nconstraint if specified. It is reserved for future use and may get broader\nsemantic implication later."}),"\n",(0,s.jsxs)(n.p,{children:["For now, it is recommended to not specify a namespace unless you have specific\nneed to do so. This means the entity belongs to the ",(0,s.jsx)(n.code,{children:'"default"'})," namespace."]}),"\n",(0,s.jsxs)(n.p,{children:["Namespaces must be sequences of ",(0,s.jsx)(n.code,{children:"[a-zA-Z0-9]"}),", possibly separated by ",(0,s.jsx)(n.code,{children:"-"}),", at\nmost 63 characters in total. Namespace names are case insensitive and will be rendered as lower case in most places."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"tracking-services"}),", ",(0,s.jsx)(n.code,{children:"payment"})]}),"\n",(0,s.jsxs)(n.h3,{id:"uid-output",children:[(0,s.jsx)(n.code,{children:"uid"})," [output]"]}),"\n",(0,s.jsx)(n.p,{children:"Each entity gets an automatically generated globally unique ID when it first\nenters the database. This field is not meant to be specified as input data, but\nis rather created by the database engine itself when producing the output entity."}),"\n",(0,s.jsxs)(n.p,{children:["Note that ",(0,s.jsx)(n.code,{children:"uid"})," values are ",(0,s.jsx)(n.em,{children:"not"})," to be seen as stable, and should ",(0,s.jsx)(n.em,{children:"not"})," be used\nas external references to an entity. The ",(0,s.jsx)(n.code,{children:"uid"})," can change over time even when a\nhuman observer might think that it wouldn't. As one of many examples,\nunregistering and re-registering the exact same file will result in a different\n",(0,s.jsx)(n.code,{children:"uid"})," value even though everything else is the same. Therefore there is very\nlittle, if any, reason to read or use this field externally."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to refer to an entity by some form of an identifier, you should\nalways use ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"string-form entity reference"}),"\ninstead."]}),"\n",(0,s.jsxs)(n.h3,{id:"title-optional",children:[(0,s.jsx)(n.code,{children:"title"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["A display name of the entity, to be presented in user interfaces instead of the\n",(0,s.jsx)(n.code,{children:"name"})," property above, when available."]}),"\n",(0,s.jsxs)(n.p,{children:["This field is sometimes useful when the ",(0,s.jsx)(n.code,{children:"name"})," is cumbersome or ends up being\nperceived as overly technical. The title generally does not have as stringent\nformat requirements on it, so it may contain special characters and be more\nexplanatory. Do keep it very short though, and avoid situations where a title\ncan be confused with the name of another entity, or where two entities share a\ntitle."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that this is only for display purposes, and may be ignored by some parts of\nthe code. ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references",children:"Entity references"})," still always make use of the ",(0,s.jsx)(n.code,{children:"name"}),"\nproperty for example, not the title."]}),"\n",(0,s.jsxs)(n.h3,{id:"description-optional",children:[(0,s.jsx)(n.code,{children:"description"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"A human readable description of the entity, to be shown in Backstage. Should be\nkept short and informative, suitable to give an overview of the entity's purpose\nat a glance. More detailed explanations and documentation should be placed\nelsewhere."}),"\n",(0,s.jsxs)(n.h3,{id:"labels-optional",children:[(0,s.jsx)(n.code,{children:"labels"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["Labels are optional key/value pairs of that are attached to the entity, and\ntheir use is identical to\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",children:"Kubernetes object labels"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Their main purpose is for references to other entities, and for information that\nis in one way or another classifying for the current entity. They are often used\nas values in queries or filters."}),"\n",(0,s.jsx)(n.p,{children:"Both the key and the value are strings, subject to the following restrictions."}),"\n",(0,s.jsxs)(n.p,{children:["Keys have an optional prefix followed by a slash, and then the name part which\nis required. The prefix, if present, must be a valid lowercase domain name, at\nmost 253 characters in total. The name part must be sequences of ",(0,s.jsx)(n.code,{children:"[a-zA-Z0-9]"}),"\nseparated by any of ",(0,s.jsx)(n.code,{children:"[-_.]"}),", at most 63 characters in total."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"backstage.io/"})," prefix is reserved for use by Backstage core components."]}),"\n",(0,s.jsxs)(n.p,{children:["Values are strings that follow the same restrictions as ",(0,s.jsx)(n.code,{children:"name"})," above."]}),"\n",(0,s.jsxs)(n.h3,{id:"annotations-optional",children:[(0,s.jsx)(n.code,{children:"annotations"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An object with arbitrary non-identifying metadata attached to the entity,\nidentical in use to\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",children:"Kubernetes object annotations"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Their purpose is mainly, but not limited, to reference into external systems.\nThis could for example be a reference to the git ref the entity was ingested\nfrom, to monitoring and logging systems, to PagerDuty schedules, etc. Users may\nadd these to descriptor YAML files, but in addition to this automated systems\nmay also add annotations, either during ingestion into the catalog, or at a\nlater time."}),"\n",(0,s.jsx)(n.p,{children:"Both the key and the value are strings, subject to the following restrictions."}),"\n",(0,s.jsxs)(n.p,{children:["Keys have an optional prefix followed by a slash, and then the name part which\nis required. The prefix must be a valid lowercase domain name if specified, at\nmost 253 characters in total. The name part must be sequences of ",(0,s.jsx)(n.code,{children:"[a-zA-Z0-9]"}),"\nseparated by any of ",(0,s.jsx)(n.code,{children:"[-_.]"}),", at most 63 characters in total."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"backstage.io/"})," prefix is reserved for use by Backstage core components."]}),"\n",(0,s.jsx)(n.p,{children:"Values can be of any length, but are limited to being strings."}),"\n",(0,s.jsxs)(n.p,{children:["There is a list of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-annotations",children:"well-known annotations"}),", but\nanybody is free to add more annotations as they see fit."]}),"\n",(0,s.jsxs)(n.h3,{id:"tags-optional",children:[(0,s.jsx)(n.code,{children:"tags"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"A list of single-valued strings, for example to classify catalog entities in\nvarious ways. This is different to the labels in metadata, as labels are\nkey-value pairs."}),"\n",(0,s.jsxs)(n.p,{children:["The values are user defined, for example the programming language used for the\ncomponent, like ",(0,s.jsx)(n.code,{children:"java"})," or ",(0,s.jsx)(n.code,{children:"go"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This field is optional, and currently has no special semantics."}),"\n",(0,s.jsxs)(n.p,{children:["Each tag must be sequences of ",(0,s.jsx)(n.code,{children:"[a-z0-9:+#]"})," separated by ",(0,s.jsx)(n.code,{children:"-"}),", at most 63 characters\nin total."]}),"\n",(0,s.jsxs)(n.h3,{id:"links-optional",children:[(0,s.jsx)(n.code,{children:"links"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"A list of external hyperlinks related to the entity. Links can provide\nadditional contextual information that may be located outside of Backstage\nitself. For example, an admin dashboard or external CMS page."}),"\n",(0,s.jsxs)(n.p,{children:["Users may add links to descriptor YAML files to provide additional reference\ninformation to external content & resources. Links are not intended to drive any\nadditional functionality within Backstage, which is best left to ",(0,s.jsx)(n.code,{children:"annotations"}),"\nand ",(0,s.jsx)(n.code,{children:"labels"}),". It is recommended to use links only when an equivalent well-known\n",(0,s.jsx)(n.code,{children:"annotation"})," does not cover a similar use case."]}),"\n",(0,s.jsx)(n.p,{children:"Fields of a link are:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"url"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["[Required] A ",(0,s.jsx)(n.code,{children:"url"})," in a standard ",(0,s.jsx)(n.code,{children:"uri"})," format (e.g. ",(0,s.jsx)(n.code,{children:"https://example.com/some/page"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"title"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"[Optional] A user friendly display name for the link."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"icon"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"[Optional] A key representing a visual icon to be displayed in the UI."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"[Optional] An optional value to categorize links into specific groups."})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"NOTE"}),": The ",(0,s.jsx)(n.code,{children:"icon"})," field value is meant to be a semantic key that will map to a\nspecific icon that may be provided by an icon library (e.g. ",(0,s.jsx)(n.code,{children:"material-ui"}),"\nicons). These keys should be a sequence of ",(0,s.jsx)(n.code,{children:"[a-z0-9A-Z]"}),", possibly separated by\none of ",(0,s.jsx)(n.code,{children:"[-_.]"}),". Backstage may support some basic icons out of the box such as those ",(0,s.jsx)(n.a,{href:"https://github.com/backstage/backstage/blob/master/packages/app-defaults/src/defaults/icons.tsx",children:"defined in app-defaults"}),", but the\nBackstage integrator will ultimately be left to provide the appropriate icon\ncomponent mappings. A generic fallback icon would be provided if a mapping\ncannot be resolved."]}),"\n",(0,s.jsxs)(n.p,{children:["The semantics of the ",(0,s.jsx)(n.code,{children:"type"})," field are undefined. The adopter is free to define their own set of types and utilize them as they wish. Some potential use cases can be to utilize the type field to validate certain links exist on entities or to create customized UI components for specific link types."]}),"\n",(0,s.jsx)(n.h2,{id:"common-to-all-kinds-relations",children:"Common to All Kinds: Relations"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"relations"})," root field is a read-only list of relations, between the current\nentity and other entities, described in the\n",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"well-known relations section"}),". Relations are commonly\ntwo-way, so that there's a pair of relation types each describing one direction\nof the relation."]}),"\n",(0,s.jsx)(n.p,{children:"A relation as part of a single entity that's read out of the API may look as\nfollows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n  // ...\n  "relations": [\n    {\n      "type": "ownedBy",\n      "targetRef": "group:default/dev.infra"\n    }\n  ],\n  "spec": {\n    "owner": "dev.infra",\n    // ...\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The fields of a relation are:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"targetRef"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["A full ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references",children:"entity reference"})," to the other end of the relation."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"The type of relation FROM a source entity TO the target entity."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"metadata"})}),(0,s.jsx)(n.td,{children:"Object"}),(0,s.jsx)(n.td,{children:"Reserved for future use."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Entity descriptor YAML files are not supposed to contain this field. Instead,\ncatalog processors analyze the entity descriptor data and its surroundings, and\ndeduce relations that are then attached onto the entity as read from the\ncatalog."}),"\n",(0,s.jsxs)(n.p,{children:["Where relations are produced, they are to be considered the authoritative source\nfor that piece of data. In the example above, a plugin would do better to\nconsume the relation rather than ",(0,s.jsx)(n.code,{children:"spec.owner"})," for deducing the owner of the\nentity, because it may even be the case that the owner isn't taken from the YAML\nat all - it could be taken from a CODEOWNERS file nearby instead for example.\nAlso, the ",(0,s.jsx)(n.code,{children:"spec.owner"})," is on a shortened form and may have semantics associated\nwith it (such as the default kind being ",(0,s.jsx)(n.code,{children:"Group"})," if not specified)."]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"well-known relations section"})," for a list of\nwell-known / common relations and their semantics."]}),"\n",(0,s.jsx)(n.h2,{id:"common-to-all-kinds-status",children:"Common to All Kinds: Status"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"status"})," root object is a read-only set of statuses, pertaining to the\ncurrent state or health of the entity, described in the\n",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-statuses",children:"well-known statuses section"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Currently, the only defined field is the ",(0,s.jsx)(n.code,{children:"items"})," array. Each of its items\ncontains a specific data structure that describes some aspect of the state of\nthe entity, as seen from the point of view of some specific system. Different\nsystems may contribute to this array, under their own respective ",(0,s.jsx)(n.code,{children:"type"})," keys."]}),"\n",(0,s.jsx)(n.p,{children:"The current main use case for this field is for the ingestion processes of the\ncatalog itself to convey information about errors and warnings back to the user."}),"\n",(0,s.jsx)(n.p,{children:"A status field as part of a single entity that's read out of the API may look as\nfollows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n  // ...\n  "status": {\n    "items": [\n      {\n        "type": "backstage.io/catalog-processing",\n        "level": "error",\n        "message": "NotFoundError: File not found",\n        "error": {\n          "name": "NotFoundError",\n          "message": "File not found",\n          "stack": "..."\n        }\n      }\n    ]\n  },\n  "spec": {\n    // ...\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The fields of a status item are:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"The type of status as a unique key per source. Each type may appear more than once in the array."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"level"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"The level / severity of the status item: 'info', 'warning, or 'error'."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"message"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"A brief message describing the status, intended for human consumption."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"error"})}),(0,s.jsx)(n.td,{children:"Object"}),(0,s.jsx)(n.td,{children:"An optional serialized error object related to the status."})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," is an arbitrary string, but we recommend that types that are not\nstrictly private within the organization be namespaced to avoid collisions.\nTypes emitted by Backstage core processes will for example be prefixed with\n",(0,s.jsx)(n.code,{children:"backstage.io/"})," as in the example above."]}),"\n",(0,s.jsxs)(n.p,{children:["Entity descriptor YAML files are not supposed to contain a ",(0,s.jsx)(n.code,{children:"status"})," root key.\nInstead, catalog processors analyze the entity descriptor data and its\nsurroundings, and deduce status entries that are then attached onto the entity\nas read from the catalog."]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-statuses",children:"well-known statuses section"})," for a list of\nwell-known / common status types."]}),"\n",(0,s.jsx)(n.h2,{id:"kind-component",children:"Kind: Component"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Component"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'A Component describes a software component. It is typically intimately linked to\nthe source code that constitutes the component, and should be what a developer\nmay regard a "unit of software", usually with a distinct deployable or linkable\nartifact.'}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  name: artist-web\n  description: The place to be, for great artists\nspec:\n  type: website\n  lifecycle: production\n  owner: artist-relations-team\n  system: artist-engagement-portal\n  dependsOn:\n    - resource:default/artists-db\n  providesApis:\n    - artist-api\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-1",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"Component"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-required",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of component as a string, e.g. ",(0,s.jsx)(n.code,{children:"website"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"The software catalog accepts any type value, but an organization should take\ngreat care to establish a proper taxonomy for these. Tools including Backstage\nitself may read this field and behave differently depending on its value. For\nexample, a website type component may present tooling in the Backstage interface\nthat is specific to just websites."}),"\n",(0,s.jsx)(n.p,{children:"The current set of well-known and common values for this field is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"service"})," - a backend service, typically exposing an API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"website"})," - a website"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"library"})," - a software library, such as an npm module or a Java library"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"speclifecycle-required",children:[(0,s.jsx)(n.code,{children:"spec.lifecycle"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The lifecycle state of the component, e.g. ",(0,s.jsx)(n.code,{children:"production"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"The software catalog accepts any lifecycle value, but an organization should\ntake great care to establish a proper taxonomy for these."}),"\n",(0,s.jsx)(n.p,{children:"The current set of well-known and common values for this field is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"experimental"})," - an experiment or early, non-production component, signaling\nthat users may not prefer to consume it over other more established\ncomponents, or that there are low or no reliability guarantees"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"production"})," - an established, owned, maintained component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"deprecated"})," - a component that is at the end of its lifecycle, and may\ndisappear at a later point in time"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-required",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\ncomponent, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of a component is the singular entity (commonly a team)\nthat bears ultimate responsibility for the component, and has the authority and\ncapability to develop and maintain it. They will be the point of contact if\nsomething goes wrong, or if features are to be requested. The main purpose of\nthis field is for display purposes in Backstage, so that people looking at\ncatalog items can get an understanding of to whom this component belongs. It is\nnot to be used by automated processes to for example assign authorization in\nruntime systems. There may be others that also develop or otherwise touch the\ncomponent, but there will always be one ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specsystem-optional",children:[(0,s.jsx)(n.code,{children:"spec.system"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the system that the\ncomponent belongs to, e.g. ",(0,s.jsx)(n.code,{children:"artist-engagement-portal"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-system",children:(0,s.jsx)(n.code,{children:"System"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#partof-and-haspart",children:[(0,s.jsx)(n.code,{children:"partOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasPart"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specsubcomponentof-optional",children:[(0,s.jsx)(n.code,{children:"spec.subcomponentOf"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to another component of\nwhich the component is a part, e.g. ",(0,s.jsx)(n.code,{children:"spotify-ios-app"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-component",children:(0,s.jsx)(n.code,{children:"Component"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#partof-and-haspart",children:[(0,s.jsx)(n.code,{children:"partOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasPart"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specprovidesapis-optional",children:[(0,s.jsx)(n.code,{children:"spec.providesApis"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity references"})," to the APIs\nthat are provided by the component, e.g. ",(0,s.jsx)(n.code,{children:"artist-api"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-api",children:(0,s.jsx)(n.code,{children:"API"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#providesapi-and-apiprovidedby",children:[(0,s.jsx)(n.code,{children:"providesApi"}),", and reverse ",(0,s.jsx)(n.code,{children:"apiProvidedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specconsumesapis-optional",children:[(0,s.jsx)(n.code,{children:"spec.consumesApis"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity references"})," to the APIs\nthat are consumed by the component, e.g. ",(0,s.jsx)(n.code,{children:"artist-api"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-api",children:(0,s.jsx)(n.code,{children:"API"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#consumesapi-and-apiconsumedby",children:[(0,s.jsx)(n.code,{children:"consumesApi"}),", and reverse ",(0,s.jsx)(n.code,{children:"apiConsumedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specdependson-optional",children:[(0,s.jsx)(n.code,{children:"spec.dependsOn"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity references"})," to the\ncomponents and resources that the component depends on, e.g. ",(0,s.jsx)(n.code,{children:"artists-db"}),". This\nfield is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-component",children:(0,s.jsx)(n.code,{children:"Component"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependsOn"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependencyOf"})]})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-resource",children:(0,s.jsx)(n.code,{children:"Resource"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependsOn"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependencyOf"})]})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-template",children:"Kind: Template"}),"\n",(0,s.jsx)(n.p,{children:"The following describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1beta2"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Template"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"A template definition describes both the parameters that are rendered in the\nfrontend part of the scaffolding wizard, and the steps that are executed when\nscaffolding that component."}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1beta2\nkind: Template\n# some metadata about the template itself\nmetadata:\n  name: v1beta2-demo\n  title: Test Action template\n  description: scaffolder v1beta2 template demo\nspec:\n  owner: backstage/techdocs-core\n  type: service\n\n  # these are the steps which are rendered in the frontend with the form input\n  parameters:\n    - title: Fill in some steps\n      required:\n        - name\n      properties:\n        name:\n          title: Name\n          type: string\n          description: Unique name of the component\n          ui:autofocus: true\n          ui:options:\n            rows: 5\n    - title: Choose a location\n      required:\n        - repoUrl\n      properties:\n        repoUrl:\n          title: Repository Location\n          type: string\n          ui:field: RepoUrlPicker\n          ui:options:\n            allowedHosts:\n              - github.com\n\n  # here's the steps that are executed in series in the scaffolder backend\n  steps:\n    - id: fetch-base\n      name: Fetch Base\n      action: fetch:template\n      input:\n        url: ./template\n        values:\n          name: '{{ parameters.name }}'\n\n    - id: fetch-docs\n      name: Fetch Docs\n      action: fetch:plain\n      input:\n        targetPath: ./community\n        url: https://github.com/backstage/community/tree/main/backstage-community-sessions\n\n    - id: publish\n      name: Publish\n      action: publish:github\n      input:\n        allowedHosts: ['github.com']\n        description: 'This is {{ parameters.name }}'\n        repoUrl: '{{ parameters.repoUrl }}'\n\n    - id: register\n      name: Register\n      action: catalog:register\n      input:\n        repoContentsUrl: {{ steps['publish'].output.repoContentsUrl }}\n        catalogInfoPath: '/catalog-info.yaml'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-2",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1beta2"})," and ",(0,s.jsx)(n.code,{children:"Template"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"metadatatags-optional",children:[(0,s.jsx)(n.code,{children:"metadata.tags"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["A list of strings that can be associated with the template, e.g.\n",(0,s.jsx)(n.code,{children:"['recommended', 'react']"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This list will also be used in the frontend to display to the user so you can\npotentially search and group templates by these tags."}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-required-1",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of component created by the template, e.g. ",(0,s.jsx)(n.code,{children:"website"}),". This is used for\nfiltering templates, and should ideally match the Component\n",(0,s.jsx)(n.a,{href:"#spectype-required",children:"spec.type"})," created by the template."]}),"\n",(0,s.jsxs)(n.h3,{id:"specparameters-required",children:[(0,s.jsx)(n.code,{children:"spec.parameters"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["You can find out more about the ",(0,s.jsx)(n.code,{children:"parameters"})," key\n",(0,s.jsx)(n.a,{href:"/docs/features/software-templates/writing-templates",children:"here"})]}),"\n",(0,s.jsxs)(n.h3,{id:"specsteps-required",children:[(0,s.jsx)(n.code,{children:"spec.steps"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["You can find out more about the ",(0,s.jsx)(n.code,{children:"steps"})," key\n",(0,s.jsx)(n.a,{href:"/docs/features/software-templates/writing-templates",children:"here"})]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-optional",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\ntemplate, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of a Template is the singular entity (commonly a team)\nthat bears ultimate responsibility for the Template, and has the authority and\ncapability to develop and maintain it. They will be the point of contact if\nsomething goes wrong, or if features are to be requested. The main purpose of\nthis field is for display purposes in Backstage, so that people looking at\ncatalog items can get an understanding of to whom this Template belongs. It is\nnot to be used by automated processes to for example assign authorization in\nruntime systems. There may be others that also develop or otherwise touch the\nTemplate, but there will always be one ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-api",children:"Kind: API"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"API"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["An API describes an interface that can be exposed by a component. The API can be\ndefined in different formats, like ",(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI"}),",\n",(0,s.jsx)(n.a,{href:"https://www.asyncapi.com/docs/reference/specification/latest",children:"AsyncAPI"}),",\n",(0,s.jsx)(n.a,{href:"https://graphql.org/learn/schema/",children:"GraphQL"}),",\n",(0,s.jsx)(n.a,{href:"https://developers.google.com/protocol-buffers",children:"gRPC"}),", or other formats."]}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: backstage.io/v1alpha1\nkind: API\nmetadata:\n  name: artist-api\n  description: Retrieve artist details\nspec:\n  type: openapi\n  lifecycle: production\n  owner: artist-relations-team\n  system: artist-engagement-portal\n  definition: |\n    openapi: "3.0.0"\n    info:\n      version: 1.0.0\n      title: Artist API\n      license:\n        name: MIT\n    servers:\n      - url: http://artist.spotify.net/v1\n    paths:\n      /artists:\n        get:\n          summary: List all artists\n    ...\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-3",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"API"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-required-2",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of the API definition as a string, e.g. ",(0,s.jsx)(n.code,{children:"openapi"}),". This field is\nrequired."]}),"\n",(0,s.jsx)(n.p,{children:"The software catalog accepts any type value, but an organization should take\ngreat care to establish a proper taxonomy for these. Tools including Backstage\nitself may read this field and behave differently depending on its value. For\nexample, an OpenAPI type API may be displayed using an OpenAPI viewer tooling in\nthe Backstage interface."}),"\n",(0,s.jsx)(n.p,{children:"The current set of well-known and common values for this field is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"openapi"})," - An API definition in YAML or JSON format based on the\n",(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI"})," version 2 or version 3 spec."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"asyncapi"})," - An API definition based on the\n",(0,s.jsx)(n.a,{href:"https://www.asyncapi.com/docs/reference/specification/latest",children:"AsyncAPI"})," version 2 or version 3 spec."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"graphql"})," - An API definition based on\n",(0,s.jsx)(n.a,{href:"https://spec.graphql.org/",children:"GraphQL schemas"})," for consuming\n",(0,s.jsx)(n.a,{href:"https://graphql.org/",children:"GraphQL"})," based APIs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"grpc"})," - An API definition based on\n",(0,s.jsx)(n.a,{href:"https://developers.google.com/protocol-buffers",children:"Protocol Buffers"})," to use with\n",(0,s.jsx)(n.a,{href:"https://grpc.io/",children:"gRPC"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"speclifecycle-required-1",children:[(0,s.jsx)(n.code,{children:"spec.lifecycle"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The lifecycle state of the API, e.g. ",(0,s.jsx)(n.code,{children:"production"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"The software catalog accepts any lifecycle value, but an organization should\ntake great care to establish a proper taxonomy for these."}),"\n",(0,s.jsx)(n.p,{children:"The current set of well-known and common values for this field is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"experimental"})," - an experiment or early, non-production API, signaling that\nusers may not prefer to consume it over other more established APIs, or that\nthere are low or no reliability guarantees"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"production"})," - an established, owned, maintained API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"deprecated"})," - an API that is at the end of its lifecycle, and may disappear\nat a later point in time"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-required-1",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\ncomponent, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of an API is the singular entity (commonly a team) that\nbears ultimate responsibility for the API, and has the authority and capability\nto develop and maintain it. They will be the point of contact if something goes\nwrong, or if features are to be requested. The main purpose of this field is for\ndisplay purposes in Backstage, so that people looking at catalog items can get\nan understanding of to whom this API belongs. It is not to be used by automated\nprocesses to for example assign authorization in runtime systems. There may be\nothers that also develop or otherwise touch the API, but there will always be\none ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specsystem-optional-1",children:[(0,s.jsx)(n.code,{children:"spec.system"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the system that the\nAPI belongs to, e.g. ",(0,s.jsx)(n.code,{children:"artist-engagement-portal"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-system",children:(0,s.jsx)(n.code,{children:"System"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#partof-and-haspart",children:[(0,s.jsx)(n.code,{children:"partOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasPart"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specdefinition-required",children:[(0,s.jsx)(n.code,{children:"spec.definition"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The definition of the API, based on the format defined by ",(0,s.jsx)(n.code,{children:"spec.type"}),". This\nfield is required."]}),"\n",(0,s.jsx)(n.h2,{id:"kind-group",children:"Kind: Group"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Group"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["A group describes an organizational entity, such as for example a team, a\nbusiness unit, or a loose collection of people in an interest group. Members of\nthese groups are modeled in the catalog as kind ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Group\nmetadata:\n  name: infrastructure\n  description: The infra business unit\nspec:\n  type: business-unit\n  profile:\n    displayName: Infrastructure\n    email: infrastructure@example.com\n    picture: https://example.com/groups/bu-infrastructure.jpeg\n  parent: ops\n  children: [backstage, other]\n  members: [jdoe]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-4",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"Group"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-required-3",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of group as a string, e.g. ",(0,s.jsx)(n.code,{children:"team"}),". There is currently no enforced set\nof values for this field, so it is left up to the adopting organization to\nchoose a nomenclature that matches their org hierarchy."]}),"\n",(0,s.jsx)(n.p,{children:"Some common values for this field could be:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"team"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"business-unit"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"product-area"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"root"})," - as a common virtual root of the hierarchy, if desired"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"specprofile-optional",children:[(0,s.jsx)(n.code,{children:"spec.profile"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"Optional profile information about the group, mainly for display purposes. All\nfields of this structure are also optional. The email would be a group email of\nsome form, that the group may wish to be used for contacting them. The picture\nis expected to be a URL pointing to an image that's representative of the group,\nand that a browser could fetch and render on a group page or similar."}),"\n",(0,s.jsxs)(n.h3,{id:"specparent-optional",children:[(0,s.jsx)(n.code,{children:"spec.parent"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"The immediate parent group in the hierarchy, if any. Not all groups must have a\nparent; the catalog supports multi-root hierarchies. Groups may however not have\nmore than one parent."}),"\n",(0,s.jsxs)(n.p,{children:["This field is an\n",(0,s.jsx)(n.a,{href:"https://backstage.io/docs/features/software-catalog/references",children:"entity reference"}),"."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#parentof-and-childof",children:[(0,s.jsx)(n.code,{children:"childOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"parentOf"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specchildren-required",children:[(0,s.jsx)(n.code,{children:"spec.children"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The immediate child groups of this group in the hierarchy (whose ",(0,s.jsx)(n.code,{children:"parent"})," field\npoints to this group). The list must be present, but may be empty if there are\nno child groups. The items are not guaranteed to be ordered in any particular\nway."]}),"\n",(0,s.jsxs)(n.p,{children:["The entries of this array are\n",(0,s.jsx)(n.a,{href:"https://backstage.io/docs/features/software-catalog/references",children:"entity references"}),"."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#parentof-and-childof",children:[(0,s.jsx)(n.code,{children:"parentOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"childOf"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specmembers-optional",children:[(0,s.jsx)(n.code,{children:"spec.members"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"The users that are direct members of this group. The items are not guaranteed to\nbe ordered in any particular way."}),"\n",(0,s.jsxs)(n.p,{children:["The entries of this array are\n",(0,s.jsx)(n.a,{href:"https://backstage.io/docs/features/software-catalog/references",children:"entity references"}),"."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#memberof-and-hasmember",children:[(0,s.jsx)(n.code,{children:"hasMember"}),", and reverse ",(0,s.jsx)(n.code,{children:"memberOf"})]})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-user",children:"Kind: User"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"User"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["A user describes a person, such as an employee, a contractor, or similar. Users\nbelong to ",(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," entities in the catalog."]}),"\n",(0,s.jsxs)(n.p,{children:["These catalog user entries are connected to the way that authentication within\nthe Backstage ecosystem works. See the ",(0,s.jsx)(n.a,{href:"https://backstage.io/docs/auth",children:"auth"}),"\nsection of the docs for a discussion of these concepts."]}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: User\nmetadata:\n  name: jdoe\nspec:\n  profile:\n    displayName: Jenny Doe\n    email: jenny-doe@example.com\n    picture: https://example.com/staff/jenny-with-party-hat.jpeg\n  memberOf: [team-b, employees]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-5",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"User"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"specprofile-optional-1",children:[(0,s.jsx)(n.code,{children:"spec.profile"})," [optional]"]}),"\n",(0,s.jsx)(n.p,{children:"Optional profile information about the user, mainly for display purposes. All\nfields of this structure are also optional. The email would be a primary email\nof some form, that the user may wish to be used for contacting them. The picture\nis expected to be a URL pointing to an image that's representative of the user,\nand that a browser could fetch and render on a profile page or similar."}),"\n",(0,s.jsxs)(n.h3,{id:"specmemberof-required",children:[(0,s.jsx)(n.code,{children:"spec.memberOf"})," [required]"]}),"\n",(0,s.jsx)(n.p,{children:"The list of groups that the user is a direct member of (i.e., no transitive\nmemberships are listed here). The list must be present, but may be empty if the\nuser is not member of any groups. The items are not guaranteed to be ordered in\nany particular way."}),"\n",(0,s.jsxs)(n.p,{children:["The entries of this array are\n",(0,s.jsx)(n.a,{href:"https://backstage.io/docs/features/software-catalog/references",children:"entity references"}),"."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#memberof-and-hasmember",children:[(0,s.jsx)(n.code,{children:"memberOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasMember"})]})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-resource",children:"Kind: Resource"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Resource"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"A resource describes the infrastructure a system needs to operate, like BigTable\ndatabases, Pub/Sub topics, S3 buckets or CDNs. Modelling them together with\ncomponents and systems allows to visualize resource footprint, and create\ntooling around them."}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Resource\nmetadata:\n  name: artists-db\n  description: Stores artist details\nspec:\n  type: database\n  owner: artist-relations-team\n  system: artist-engagement-portal\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-6",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"Resource"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-required-2",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\nresource, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of a resource is the singular entity (commonly a team)\nthat bears ultimate responsibility for the resource, and has the authority and\ncapability to develop and maintain it. They will be the point of contact if\nsomething goes wrong, or if features are to be requested. The main purpose of\nthis field is for display purposes in Backstage, so that people looking at\ncatalog items can get an understanding of to whom this resource belongs. It is\nnot to be used by automated processes to for example assign authorization in\nruntime systems. There may be others that also manage or otherwise touch the\nresource, but there will always be one ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-required-4",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The type of resource as a string, e.g. ",(0,s.jsx)(n.code,{children:"database"}),". This field is required. There\nis currently no enforced set of values for this field, so it is left up to the\nadopting organization to choose a nomenclature that matches the resources used\nin their tech stack."]}),"\n",(0,s.jsx)(n.p,{children:"Some common values for this field could be:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"database"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"s3-bucket"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"kubernetes-cluster"})}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"specsystem-optional-2",children:[(0,s.jsx)(n.code,{children:"spec.system"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the system that the\nresource belongs to, e.g. ",(0,s.jsx)(n.code,{children:"artist-engagement-portal"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-system",children:(0,s.jsx)(n.code,{children:"System"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#partof-and-haspart",children:[(0,s.jsx)(n.code,{children:"partOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasPart"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specdependson-optional-1",children:[(0,s.jsx)(n.code,{children:"spec.dependsOn"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity references"})," to the\ncomponents and resources that the resource depends on, e.g. ",(0,s.jsx)(n.code,{children:"artist-lookup"}),".\nThis field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-component",children:(0,s.jsx)(n.code,{children:"Component"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependsOn"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependencyOf"})]})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-resource",children:(0,s.jsx)(n.code,{children:"Resource"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependsOn"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependencyOf"})]})})]})]})]}),"\n",(0,s.jsxs)(n.h3,{id:"specdependencyof-optional",children:[(0,s.jsx)(n.code,{children:"spec.dependencyOf"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity references"})," to the\ncomponents and resources that the resource is a dependency of, e.g. ",(0,s.jsx)(n.code,{children:"artist-lookup"}),".\nThis field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-component",children:(0,s.jsx)(n.code,{children:"Component"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependencyOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependsOn"})]})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#kind-resource",children:(0,s.jsx)(n.code,{children:"Resource"})})}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#dependson-and-dependencyof",children:[(0,s.jsx)(n.code,{children:"dependencyOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"dependsOn"})]})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-system",children:"Kind: System"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"System"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"A system is a collection of resources and components. The system may expose or\nconsume one or several APIs. It is viewed as abstraction level that provides\npotential consumers insights into exposed features without needing a too\ndetailed view into the details of all components. This also gives the owning\nteam the possibility to decide about published artifacts and APIs."}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: System\nmetadata:\n  name: artist-engagement-portal\n  description: Handy tools to keep artists in the loop\nspec:\n  owner: artist-relations-team\n  domain: artists\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-7",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"System"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-required-3",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\nsystem, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of a system is the singular entity (commonly a team)\nthat bears ultimate responsibility for the system, and has the authority and\ncapability to develop and maintain it. They will be the point of contact if\nsomething goes wrong, or if features are to be requested. The main purpose of\nthis field is for display purposes in Backstage, so that people looking at\ncatalog items can get an understanding of to whom this system belongs. It is not\nto be used by automated processes to for example assign authorization in runtime\nsystems. There may be others that also develop or otherwise touch the system,\nbut there will always be one ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsxs)(n.h3,{id:"specdomain-optional",children:[(0,s.jsx)(n.code,{children:"spec.domain"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the domain that the\nsystem belongs to, e.g. ",(0,s.jsx)(n.code,{children:"artists"}),". This field is optional."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-domain",children:(0,s.jsx)(n.code,{children:"Domain"})})," (default)"]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#partof-and-haspart",children:[(0,s.jsx)(n.code,{children:"partOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"hasPart"})]})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-domain",children:"Kind: Domain"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Domain"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"A Domain groups a collection of systems that share terminology, domain models,\nbusiness purpose, or documentation, i.e. form a bounded context."}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Domain\nmetadata:\n  name: artists\n  description: Everything about artists\nspec:\n  owner: artist-relations-team\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-8",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"Domain"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"specowner-required-4",children:[(0,s.jsx)(n.code,{children:"spec.owner"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/references#string-references",children:"entity reference"})," to the owner of the\ndomain, e.g. ",(0,s.jsx)(n.code,{children:"artist-relations-team"}),". This field is required."]}),"\n",(0,s.jsx)(n.p,{children:"In Backstage, the owner of a domain is the singular entity (commonly a team)\nthat bears ultimate responsibility for the domain, and has the authority and\ncapability to develop and maintain it. They will be the point of contact if\nsomething goes wrong, or if features are to be requested. The main purpose of\nthis field is for display purposes in Backstage, so that people looking at\ncatalog items can get an understanding of to whom this domain belongs. It is not\nto be used by automated processes to for example assign authorization in runtime\nsystems. There may be others that also develop or otherwise touch the domain,\nbut there will always be one ultimate owner."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.a,{href:"#apiversion-and-kind-required",children:(0,s.jsx)(n.code,{children:"kind"})})}),(0,s.jsxs)(n.th,{children:["Default ",(0,s.jsx)(n.a,{href:"#namespace-optional",children:(0,s.jsx)(n.code,{children:"namespace"})})]}),(0,s.jsxs)(n.th,{children:["Generated ",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/well-known-relations",children:"relation"})," type"]})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"#kind-group",children:(0,s.jsx)(n.code,{children:"Group"})})," (default), ",(0,s.jsx)(n.a,{href:"#kind-user",children:(0,s.jsx)(n.code,{children:"User"})})]}),(0,s.jsxs)(n.td,{children:["Same as this entity, typically ",(0,s.jsx)(n.code,{children:"default"})]}),(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.a,{href:"/docs/features/software-catalog/well-known-relations#ownedby-and-ownerof",children:[(0,s.jsx)(n.code,{children:"ownerOf"}),", and reverse ",(0,s.jsx)(n.code,{children:"ownedBy"})]})})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"kind-location",children:"Kind: Location"}),"\n",(0,s.jsx)(n.p,{children:"Describes the following entity kind:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Location"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"A location is a marker that references other places to look for catalog data."}),"\n",(0,s.jsx)(n.p,{children:"Descriptor files for this kind may look as follows."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: backstage.io/v1alpha1\nkind: Location\nmetadata:\n  name: org-data\nspec:\n  type: url\n  targets:\n    - http://github.com/myorg/myproject/org-data-dump/catalog-info-staff.yaml\n    - http://github.com/myorg/myproject/org-data-dump/catalog-info-consultants.yaml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the ",(0,s.jsx)(n.a,{href:"#common-to-all-kinds-the-metadata",children:"common envelope metadata"}),"\nshape, this kind has the following structure."]}),"\n",(0,s.jsxs)(n.h3,{id:"apiversion-and-kind-required-9",children:[(0,s.jsx)(n.code,{children:"apiVersion"})," and ",(0,s.jsx)(n.code,{children:"kind"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["Exactly equal to ",(0,s.jsx)(n.code,{children:"backstage.io/v1alpha1"})," and ",(0,s.jsx)(n.code,{children:"Location"}),", respectively."]}),"\n",(0,s.jsxs)(n.h3,{id:"spec-required",children:[(0,s.jsx)(n.code,{children:"spec"})," [required]"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"spec"})," field is required. The minimal spec should be an empty object."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectype-optional",children:[(0,s.jsx)(n.code,{children:"spec.type"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["The single location type, that's common to the targets specified in the spec. If\nit is left out, it is inherited from the location type that originally read the\nentity data. For example, if you have a ",(0,s.jsx)(n.code,{children:"url"})," type location, that when read\nresults in a ",(0,s.jsx)(n.code,{children:"Location"})," kind entity with no ",(0,s.jsx)(n.code,{children:"spec.type"}),", then the referenced\ntargets in the entity will implicitly also be of ",(0,s.jsx)(n.code,{children:"url"})," type. This is useful\nbecause you can define a hierarchy of things in a directory structure using\nrelative target paths (see below), and it will work out no matter if it's\nconsumed locally on disk from a ",(0,s.jsx)(n.code,{children:"file"})," location, or as uploaded on a VCS."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectarget-optional",children:[(0,s.jsx)(n.code,{children:"spec.target"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["A single target as a string. Can be either an absolute path/URL (depending on\nthe type), or a relative path such as ",(0,s.jsx)(n.code,{children:"./details/catalog-info.yaml"})," which is\nresolved relative to the location of this Location entity itself."]}),"\n",(0,s.jsxs)(n.h3,{id:"spectargets-optional",children:[(0,s.jsx)(n.code,{children:"spec.targets"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["A list of targets as strings. They can all be either absolute paths/URLs\n(depending on the type), or relative paths such as ",(0,s.jsx)(n.code,{children:"./details/catalog-info.yaml"}),"\nwhich are resolved relative to the location of this Location entity itself."]}),"\n",(0,s.jsxs)(n.h3,{id:"specpresence-optional",children:[(0,s.jsx)(n.code,{children:"spec.presence"})," [optional]"]}),"\n",(0,s.jsxs)(n.p,{children:["Describes whether the target of a location is required to exist or not. It defaults to ",(0,s.jsx)(n.code,{children:"'required'"})," if not specified, can also be ",(0,s.jsx)(n.code,{children:"'optional'"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},371426:(e,n,t)=>{var s=t(827378),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var s,r={},l=null,c=null;for(s in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)a.call(n,s)&&!d.hasOwnProperty(s)&&(r[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===r[s]&&(r[s]=n[s]);return{$$typeof:i,type:e,key:l,ref:c,props:r,_owner:o.current}}n.Fragment=r,n.jsx=l,n.jsxs=l},541535:(e,n)=>{var t=Symbol.for("react.element"),s=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),d=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;var u={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x=Object.assign,j={};function m(e,n,t){this.props=e,this.context=n,this.refs=j,this.updater=t||u}function y(){}function g(e,n,t){this.props=e,this.context=n,this.refs=j,this.updater=t||u}m.prototype.isReactComponent={},m.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=m.prototype;var b=g.prototype=new y;b.constructor=g,x(b,m.prototype),b.isPureReactComponent=!0;var w=Array.isArray,v=Object.prototype.hasOwnProperty,k={current:null},q={key:!0,ref:!0,__self:!0,__source:!0};function T(e,n,s){var i,r={},a=null,o=null;if(null!=n)for(i in void 0!==n.ref&&(o=n.ref),void 0!==n.key&&(a=""+n.key),n)v.call(n,i)&&!q.hasOwnProperty(i)&&(r[i]=n[i]);var d=arguments.length-2;if(1===d)r.children=s;else if(1<d){for(var l=Array(d),c=0;c<d;c++)l[c]=arguments[c+2];r.children=l}if(e&&e.defaultProps)for(i in d=e.defaultProps)void 0===r[i]&&(r[i]=d[i]);return{$$typeof:t,type:e,key:a,ref:o,props:r,_owner:k.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var S=/\/+/g;function I(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function O(e,n,i,r,a){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var d=!1;if(null===e)d=!0;else switch(o){case"string":case"number":d=!0;break;case"object":switch(e.$$typeof){case t:case s:d=!0}}if(d)return a=a(d=e),e=""===r?"."+I(d,0):r,w(a)?(i="",null!=e&&(i=e.replace(S,"$&/")+"/"),O(a,n,i,"",(function(e){return e}))):null!=a&&(A(a)&&(a=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,i+(!a.key||d&&d.key===a.key?"":(""+a.key).replace(S,"$&/")+"/")+e)),n.push(a)),1;if(d=0,r=""===r?".":r+":",w(e))for(var l=0;l<e.length;l++){var c=r+I(o=e[l],l);d+=O(o,n,i,c,a)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),l=0;!(o=e.next()).done;)d+=O(o=o.value,n,i,c=r+I(o,l++),a);else if("object"===o)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return d}function P(e,n,t){if(null==e)return e;var s=[],i=0;return O(e,s,"","",(function(e){return n.call(t,e,i++)})),s}function D(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var _={current:null},C={transition:null},E={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:C,ReactCurrentOwner:k};n.Children={map:P,forEach:function(e,n,t){P(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return P(e,(function(){n++})),n},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=m,n.Fragment=i,n.Profiler=a,n.PureComponent=g,n.StrictMode=r,n.Suspense=c,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=E,n.cloneElement=function(e,n,s){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=x({},e.props),r=e.key,a=e.ref,o=e._owner;if(null!=n){if(void 0!==n.ref&&(a=n.ref,o=k.current),void 0!==n.key&&(r=""+n.key),e.type&&e.type.defaultProps)var d=e.type.defaultProps;for(l in n)v.call(n,l)&&!q.hasOwnProperty(l)&&(i[l]=void 0===n[l]&&void 0!==d?d[l]:n[l])}var l=arguments.length-2;if(1===l)i.children=s;else if(1<l){d=Array(l);for(var c=0;c<l;c++)d[c]=arguments[c+2];i.children=d}return{$$typeof:t,type:e.type,key:r,ref:a,props:i,_owner:o}},n.createContext=function(e){return(e={$$typeof:d,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},n.createElement=T,n.createFactory=function(e){var n=T.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:l,render:e}},n.isValidElement=A,n.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:D}},n.memo=function(e,n){return{$$typeof:h,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=C.transition;C.transition={};try{e()}finally{C.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return _.current.useCallback(e,n)},n.useContext=function(e){return _.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return _.current.useDeferredValue(e)},n.useEffect=function(e,n){return _.current.useEffect(e,n)},n.useId=function(){return _.current.useId()},n.useImperativeHandle=function(e,n,t){return _.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return _.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return _.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return _.current.useMemo(e,n)},n.useReducer=function(e,n,t){return _.current.useReducer(e,n,t)},n.useRef=function(e){return _.current.useRef(e)},n.useState=function(e){return _.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return _.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return _.current.useTransition()},n.version="18.2.0"},827378:(e,n,t)=>{e.exports=t(541535)},824246:(e,n,t)=>{e.exports=t(371426)},511151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(667294);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);